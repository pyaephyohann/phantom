generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String
  password String?
  imageUrl String?
  nickname String?
  genderId Int?
  gender   Gender? @relation(fields: [genderId], references: [id])
  isArchived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Product {
  id              Int               @id @default(autoincrement())
  name            String
  imageUrl        String?
  price           Int
  ProductCategory ProductCategory[]
  sizeId          Int
  size            Size              @relation(fields: [sizeId], references: [id])
  colorId         Int
  color           Color             @relation(fields: [colorId], references: [id])
  genderId        Int
  gender          Gender            @relation(fields: [genderId], references: [id])
  isArchived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String
  ProductCategory ProductCategory[]
  isArchived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model ProductCategory {
  id         Int      @id @default(autoincrement())
  productId  Int
  categoryId Int
  product    Product  @relation(fields: [productId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
  isArchived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Size {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
  isArchived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Color {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
  isArchived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Gender {
  id      Int       @id @default(autoincrement())
  name    String
  User    User[]
  Product Product[]
  isArchived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
